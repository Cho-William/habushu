<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.bitbucket.cpointe.habushu</groupId>
		<artifactId>habushu</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>

	<name>habushu::Mixing Drinks with Habushu</name>
	<description>Example of how to use the habushu-maven-plugin</description>

	<artifactId>habushu-mixology</artifactId>
	<packaging>habushu</packaging>
    <dependencies>
        <dependency>
            <groupId>org.bitbucket.askllc.krausening</groupId>
            <artifactId>krausening-python</artifactId>
			<version>10</version>
            <type>zip</type>
        </dependency>
	</dependencies>

	<build>
		<plugins>
		<!-- Projects migrating from Habushu 1.x.x, or without access to a PyPi registry for artifact storage, can use this plugin to import
			dependencies packaged/tagged using maven
		-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
                        <phase>validate</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.bitbucket.cpointe.habushu</groupId>
				<artifactId>habushu-maven-plugin</artifactId>
				<version>${project.version}</version>
				<extensions>true</extensions>
				<configuration>
					<pythonVersion>3.9.9</pythonVersion>
					<!-- NB Temporarily skip WIP scenarios related to krausening-python that aren't yet supported -->
					<behaveOptions>--tags=-wip</behaveOptions>
					<systemPropertyVariables>
						<KRAUSENING_BASE>${project.basedir}/src/test/resources/config</KRAUSENING_BASE>
					</systemPropertyVariables>
				</configuration>
				<!-- Utilize the run-command-in-virtual-env goal to demonstrate how commands/scripts may be
					executed via "poetry run" and bound to the build lifecycle phases -->
				<executions>
					<execution>
						<configuration>
							<runCommandArgs>python -m grpc_tools.protoc -I=src --python_out=src/habushu_mixology/generated src/person.proto</runCommandArgs>
						</configuration>
						<id>generate-protobuf-bindings</id>
						<phase>compile</phase>
						<goals>
							<goal>run-command-in-virtual-env</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.bitbucket.cpointe.habushu</groupId>
						<artifactId>habushu-maven-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<KRAUSENING_EXTENSIONS>${project.basedir}/src/test/resources/config_extension</KRAUSENING_EXTENSIONS>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>